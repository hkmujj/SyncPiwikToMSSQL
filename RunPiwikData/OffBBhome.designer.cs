#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5448
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RunPiwikData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="offLineBBHome")]
	public partial class OffBBhomeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPiwik_log(Piwik_log instance);
    partial void UpdatePiwik_log(Piwik_log instance);
    partial void DeletePiwik_log(Piwik_log instance);
    partial void InsertPiwik_log201306(Piwik_log201306 instance);
    partial void UpdatePiwik_log201306(Piwik_log201306 instance);
    partial void DeletePiwik_log201306(Piwik_log201306 instance);
    partial void Insertpiwik_log_reffer(piwik_log_reffer instance);
    partial void Updatepiwik_log_reffer(piwik_log_reffer instance);
    partial void Deletepiwik_log_reffer(piwik_log_reffer instance);
    #endregion
		
		public OffBBhomeDataContext() : 
				base(global::RunPiwikData.Properties.Settings.Default.offLineBBHomeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OffBBhomeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OffBBhomeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OffBBhomeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OffBBhomeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Piwik_log> Piwik_logs
		{
			get
			{
				return this.GetTable<Piwik_log>();
			}
		}
		
		public System.Data.Linq.Table<Piwik_log201306> Piwik_log201306s
		{
			get
			{
				return this.GetTable<Piwik_log201306>();
			}
		}
		
		public System.Data.Linq.Table<piwik_log_reffer> piwik_log_reffers
		{
			get
			{
				return this.GetTable<piwik_log_reffer>();
			}
		}
	}
	
	[Table(Name="dbo.Piwik_log")]
	public partial class Piwik_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userid;
		
		private string _guid;
		
		private string _url;
		
		private System.Nullable<System.DateTime> _lastVisitTime;
		
		private int _id;
		
		private string _action;
		
		private string _pagetitle;
		
		private System.Nullable<int> _spenttime;
		
		private string _refferurl;
		
		private string _keyword;
		
		private string _event_action;
		
		private string _visitIp;
		
		private string _location;
		
		private string _locationsina;
		
		private System.Data.Linq.Binary _timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseridChanging(int value);
    partial void OnuseridChanged();
    partial void OnguidChanging(string value);
    partial void OnguidChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnlastVisitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnlastVisitTimeChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnactionChanging(string value);
    partial void OnactionChanged();
    partial void OnpagetitleChanging(string value);
    partial void OnpagetitleChanged();
    partial void OnspenttimeChanging(System.Nullable<int> value);
    partial void OnspenttimeChanged();
    partial void OnrefferurlChanging(string value);
    partial void OnrefferurlChanged();
    partial void OnkeywordChanging(string value);
    partial void OnkeywordChanged();
    partial void Onevent_actionChanging(string value);
    partial void Onevent_actionChanged();
    partial void OnvisitIpChanging(string value);
    partial void OnvisitIpChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OnlocationsinaChanging(string value);
    partial void OnlocationsinaChanged();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    #endregion
		
		public Piwik_log()
		{
			OnCreated();
		}
		
		[Column(Storage="_userid", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[Column(Storage="_guid", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string guid
		{
			get
			{
				return this._guid;
			}
			set
			{
				if ((this._guid != value))
				{
					this.OnguidChanging(value);
					this.SendPropertyChanging();
					this._guid = value;
					this.SendPropertyChanged("guid");
					this.OnguidChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="VarChar(5000)", UpdateCheck=UpdateCheck.Never)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Column(Storage="_lastVisitTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> lastVisitTime
		{
			get
			{
				return this._lastVisitTime;
			}
			set
			{
				if ((this._lastVisitTime != value))
				{
					this.OnlastVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._lastVisitTime = value;
					this.SendPropertyChanged("lastVisitTime");
					this.OnlastVisitTimeChanged();
				}
			}
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_action", DbType="VarChar(5000)", UpdateCheck=UpdateCheck.Never)]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}
		
		[Column(Storage="_pagetitle", DbType="VarChar(5000)", UpdateCheck=UpdateCheck.Never)]
		public string pagetitle
		{
			get
			{
				return this._pagetitle;
			}
			set
			{
				if ((this._pagetitle != value))
				{
					this.OnpagetitleChanging(value);
					this.SendPropertyChanging();
					this._pagetitle = value;
					this.SendPropertyChanged("pagetitle");
					this.OnpagetitleChanged();
				}
			}
		}
		
		[Column(Storage="_spenttime", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> spenttime
		{
			get
			{
				return this._spenttime;
			}
			set
			{
				if ((this._spenttime != value))
				{
					this.OnspenttimeChanging(value);
					this.SendPropertyChanging();
					this._spenttime = value;
					this.SendPropertyChanged("spenttime");
					this.OnspenttimeChanged();
				}
			}
		}
		
		[Column(Storage="_refferurl", DbType="VarChar(5000)", UpdateCheck=UpdateCheck.Never)]
		public string refferurl
		{
			get
			{
				return this._refferurl;
			}
			set
			{
				if ((this._refferurl != value))
				{
					this.OnrefferurlChanging(value);
					this.SendPropertyChanging();
					this._refferurl = value;
					this.SendPropertyChanged("refferurl");
					this.OnrefferurlChanged();
				}
			}
		}
		
		[Column(Storage="_keyword", DbType="VarChar(2000)", UpdateCheck=UpdateCheck.Never)]
		public string keyword
		{
			get
			{
				return this._keyword;
			}
			set
			{
				if ((this._keyword != value))
				{
					this.OnkeywordChanging(value);
					this.SendPropertyChanging();
					this._keyword = value;
					this.SendPropertyChanged("keyword");
					this.OnkeywordChanged();
				}
			}
		}
		
		[Column(Storage="_event_action", DbType="VarChar(5000)", UpdateCheck=UpdateCheck.Never)]
		public string event_action
		{
			get
			{
				return this._event_action;
			}
			set
			{
				if ((this._event_action != value))
				{
					this.Onevent_actionChanging(value);
					this.SendPropertyChanging();
					this._event_action = value;
					this.SendPropertyChanged("event_action");
					this.Onevent_actionChanged();
				}
			}
		}
		
		[Column(Storage="_visitIp", DbType="Char(30)", UpdateCheck=UpdateCheck.Never)]
		public string visitIp
		{
			get
			{
				return this._visitIp;
			}
			set
			{
				if ((this._visitIp != value))
				{
					this.OnvisitIpChanging(value);
					this.SendPropertyChanging();
					this._visitIp = value;
					this.SendPropertyChanged("visitIp");
					this.OnvisitIpChanged();
				}
			}
		}
		
		[Column(Storage="_location", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[Column(Storage="_locationsina", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string locationsina
		{
			get
			{
				return this._locationsina;
			}
			set
			{
				if ((this._locationsina != value))
				{
					this.OnlocationsinaChanging(value);
					this.SendPropertyChanging();
					this._locationsina = value;
					this.SendPropertyChanged("locationsina");
					this.OnlocationsinaChanged();
				}
			}
		}
		
		[Column(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Piwik_log201306")]
	public partial class Piwik_log201306 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userid;
		
		private string _guid;
		
		private string _url;
		
		private System.Nullable<System.DateTime> _lastVisitTime;
		
		private int _id;
		
		private string _action;
		
		private string _pagetitle;
		
		private System.Nullable<int> _spenttime;
		
		private string _refferurl;
		
		private string _keyword;
		
		private string _event_action;
		
		private string _visitIp;
		
		private string _location;
		
		private string _locationsina;
		
		private System.Data.Linq.Binary _timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseridChanging(int value);
    partial void OnuseridChanged();
    partial void OnguidChanging(string value);
    partial void OnguidChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnlastVisitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnlastVisitTimeChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnactionChanging(string value);
    partial void OnactionChanged();
    partial void OnpagetitleChanging(string value);
    partial void OnpagetitleChanged();
    partial void OnspenttimeChanging(System.Nullable<int> value);
    partial void OnspenttimeChanged();
    partial void OnrefferurlChanging(string value);
    partial void OnrefferurlChanged();
    partial void OnkeywordChanging(string value);
    partial void OnkeywordChanged();
    partial void Onevent_actionChanging(string value);
    partial void Onevent_actionChanged();
    partial void OnvisitIpChanging(string value);
    partial void OnvisitIpChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OnlocationsinaChanging(string value);
    partial void OnlocationsinaChanged();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    #endregion
		
		public Piwik_log201306()
		{
			OnCreated();
		}
		
		[Column(Storage="_userid", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[Column(Storage="_guid", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string guid
		{
			get
			{
				return this._guid;
			}
			set
			{
				if ((this._guid != value))
				{
					this.OnguidChanging(value);
					this.SendPropertyChanging();
					this._guid = value;
					this.SendPropertyChanged("guid");
					this.OnguidChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="VarChar(2000)", UpdateCheck=UpdateCheck.Never)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Column(Storage="_lastVisitTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> lastVisitTime
		{
			get
			{
				return this._lastVisitTime;
			}
			set
			{
				if ((this._lastVisitTime != value))
				{
					this.OnlastVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._lastVisitTime = value;
					this.SendPropertyChanged("lastVisitTime");
					this.OnlastVisitTimeChanged();
				}
			}
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_action", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}
		
		[Column(Storage="_pagetitle", DbType="VarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string pagetitle
		{
			get
			{
				return this._pagetitle;
			}
			set
			{
				if ((this._pagetitle != value))
				{
					this.OnpagetitleChanging(value);
					this.SendPropertyChanging();
					this._pagetitle = value;
					this.SendPropertyChanged("pagetitle");
					this.OnpagetitleChanged();
				}
			}
		}
		
		[Column(Storage="_spenttime", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> spenttime
		{
			get
			{
				return this._spenttime;
			}
			set
			{
				if ((this._spenttime != value))
				{
					this.OnspenttimeChanging(value);
					this.SendPropertyChanging();
					this._spenttime = value;
					this.SendPropertyChanged("spenttime");
					this.OnspenttimeChanged();
				}
			}
		}
		
		[Column(Storage="_refferurl", DbType="VarChar(5000)", UpdateCheck=UpdateCheck.Never)]
		public string refferurl
		{
			get
			{
				return this._refferurl;
			}
			set
			{
				if ((this._refferurl != value))
				{
					this.OnrefferurlChanging(value);
					this.SendPropertyChanging();
					this._refferurl = value;
					this.SendPropertyChanged("refferurl");
					this.OnrefferurlChanged();
				}
			}
		}
		
		[Column(Storage="_keyword", DbType="VarChar(2000)", UpdateCheck=UpdateCheck.Never)]
		public string keyword
		{
			get
			{
				return this._keyword;
			}
			set
			{
				if ((this._keyword != value))
				{
					this.OnkeywordChanging(value);
					this.SendPropertyChanging();
					this._keyword = value;
					this.SendPropertyChanged("keyword");
					this.OnkeywordChanged();
				}
			}
		}
		
		[Column(Storage="_event_action", DbType="VarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string event_action
		{
			get
			{
				return this._event_action;
			}
			set
			{
				if ((this._event_action != value))
				{
					this.Onevent_actionChanging(value);
					this.SendPropertyChanging();
					this._event_action = value;
					this.SendPropertyChanged("event_action");
					this.Onevent_actionChanged();
				}
			}
		}
		
		[Column(Storage="_visitIp", DbType="Char(30)", UpdateCheck=UpdateCheck.Never)]
		public string visitIp
		{
			get
			{
				return this._visitIp;
			}
			set
			{
				if ((this._visitIp != value))
				{
					this.OnvisitIpChanging(value);
					this.SendPropertyChanging();
					this._visitIp = value;
					this.SendPropertyChanged("visitIp");
					this.OnvisitIpChanged();
				}
			}
		}
		
		[Column(Storage="_location", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[Column(Storage="_locationsina", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string locationsina
		{
			get
			{
				return this._locationsina;
			}
			set
			{
				if ((this._locationsina != value))
				{
					this.OnlocationsinaChanging(value);
					this.SendPropertyChanging();
					this._locationsina = value;
					this.SendPropertyChanged("locationsina");
					this.OnlocationsinaChanged();
				}
			}
		}
		
		[Column(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.piwik_log_reffer")]
	public partial class piwik_log_reffer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _refferurl;
		
		private string _source;
		
		private string _medium;
		
		private int _Id;
		
		private string _refergbk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrefferurlChanging(string value);
    partial void OnrefferurlChanged();
    partial void OnsourceChanging(string value);
    partial void OnsourceChanged();
    partial void OnmediumChanging(string value);
    partial void OnmediumChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnrefergbkChanging(string value);
    partial void OnrefergbkChanged();
    #endregion
		
		public piwik_log_reffer()
		{
			OnCreated();
		}
		
		[Column(Storage="_refferurl", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string refferurl
		{
			get
			{
				return this._refferurl;
			}
			set
			{
				if ((this._refferurl != value))
				{
					this.OnrefferurlChanging(value);
					this.SendPropertyChanging();
					this._refferurl = value;
					this.SendPropertyChanged("refferurl");
					this.OnrefferurlChanged();
				}
			}
		}
		
		[Column(Storage="_source", DbType="VarChar(5000)")]
		public string source
		{
			get
			{
				return this._source;
			}
			set
			{
				if ((this._source != value))
				{
					this.OnsourceChanging(value);
					this.SendPropertyChanging();
					this._source = value;
					this.SendPropertyChanged("source");
					this.OnsourceChanged();
				}
			}
		}
		
		[Column(Storage="_medium", DbType="VarChar(5000)")]
		public string medium
		{
			get
			{
				return this._medium;
			}
			set
			{
				if ((this._medium != value))
				{
					this.OnmediumChanging(value);
					this.SendPropertyChanging();
					this._medium = value;
					this.SendPropertyChanged("medium");
					this.OnmediumChanged();
				}
			}
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_refergbk", DbType="VarChar(5000)")]
		public string refergbk
		{
			get
			{
				return this._refergbk;
			}
			set
			{
				if ((this._refergbk != value))
				{
					this.OnrefergbkChanging(value);
					this.SendPropertyChanging();
					this._refergbk = value;
					this.SendPropertyChanged("refergbk");
					this.OnrefergbkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
