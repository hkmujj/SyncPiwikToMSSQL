#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5448
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="offLineBBHome")]
	public partial class offlineBbhomeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGA_Log(GA_Log instance);
    partial void UpdateGA_Log(GA_Log instance);
    partial void DeleteGA_Log(GA_Log instance);
    partial void InsertPiwik_log(Piwik_log instance);
    partial void UpdatePiwik_log(Piwik_log instance);
    partial void DeletePiwik_log(Piwik_log instance);
    #endregion
		
		public offlineBbhomeDataContext() : 
				base(global::ConsoleApplication2.Properties.Settings.Default.offLineBBHomeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public offlineBbhomeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public offlineBbhomeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public offlineBbhomeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public offlineBbhomeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ga_guidUserID> Ga_guidUserIDs
		{
			get
			{
				return this.GetTable<Ga_guidUserID>();
			}
		}
		
		public System.Data.Linq.Table<GA_Log> GA_Logs
		{
			get
			{
				return this.GetTable<GA_Log>();
			}
		}
		
		public System.Data.Linq.Table<Piwik_log> Piwik_logs
		{
			get
			{
				return this.GetTable<Piwik_log>();
			}
		}
	}
	
	[Table(Name="dbo.Ga_guidUserID")]
	public partial class Ga_guidUserID
	{
		
		private int _uid;
		
		private string _guid;
		
		public Ga_guidUserID()
		{
		}
		
		[Column(Storage="_uid", DbType="Int NOT NULL")]
		public int uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					this._uid = value;
				}
			}
		}
		
		[Column(Storage="_guid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string guid
		{
			get
			{
				return this._guid;
			}
			set
			{
				if ((this._guid != value))
				{
					this._guid = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.GA_Log")]
	public partial class GA_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _GAStartDate;
		
		private System.DateTime _GAEndDate;
		
		private int _Type;
		
		private bool _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGAStartDateChanging(System.DateTime value);
    partial void OnGAStartDateChanged();
    partial void OnGAEndDateChanging(System.DateTime value);
    partial void OnGAEndDateChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    #endregion
		
		public GA_Log()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_GAStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime GAStartDate
		{
			get
			{
				return this._GAStartDate;
			}
			set
			{
				if ((this._GAStartDate != value))
				{
					this.OnGAStartDateChanging(value);
					this.SendPropertyChanging();
					this._GAStartDate = value;
					this.SendPropertyChanged("GAStartDate");
					this.OnGAStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_GAEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime GAEndDate
		{
			get
			{
				return this._GAEndDate;
			}
			set
			{
				if ((this._GAEndDate != value))
				{
					this.OnGAEndDateChanging(value);
					this.SendPropertyChanging();
					this._GAEndDate = value;
					this.SendPropertyChanged("GAEndDate");
					this.OnGAEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Piwik_log")]
	public partial class Piwik_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userid;
		
		private string _guid;
		
		private string _url;
		
		private System.Nullable<System.DateTime> _lastVisitTime;
		
		private int _id;
		
		private string _action;
		
		private string _pagetitle;
		
		private System.Nullable<int> _spenttime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseridChanging(int value);
    partial void OnuseridChanged();
    partial void OnguidChanging(string value);
    partial void OnguidChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnlastVisitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnlastVisitTimeChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnactionChanging(string value);
    partial void OnactionChanged();
    partial void OnpagetitleChanging(string value);
    partial void OnpagetitleChanged();
    partial void OnspenttimeChanging(System.Nullable<int> value);
    partial void OnspenttimeChanged();
    #endregion
		
		public Piwik_log()
		{
			OnCreated();
		}
		
		[Column(Storage="_userid", DbType="Int NOT NULL")]
		public int userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[Column(Storage="_guid", DbType="VarChar(50)")]
		public string guid
		{
			get
			{
				return this._guid;
			}
			set
			{
				if ((this._guid != value))
				{
					this.OnguidChanging(value);
					this.SendPropertyChanging();
					this._guid = value;
					this.SendPropertyChanged("guid");
					this.OnguidChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="VarChar(500)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Column(Storage="_lastVisitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastVisitTime
		{
			get
			{
				return this._lastVisitTime;
			}
			set
			{
				if ((this._lastVisitTime != value))
				{
					this.OnlastVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._lastVisitTime = value;
					this.SendPropertyChanged("lastVisitTime");
					this.OnlastVisitTimeChanged();
				}
			}
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_action", DbType="VarChar(20)")]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}
		
		[Column(Storage="_pagetitle", DbType="VarChar(500)")]
		public string pagetitle
		{
			get
			{
				return this._pagetitle;
			}
			set
			{
				if ((this._pagetitle != value))
				{
					this.OnpagetitleChanging(value);
					this.SendPropertyChanging();
					this._pagetitle = value;
					this.SendPropertyChanged("pagetitle");
					this.OnpagetitleChanged();
				}
			}
		}
		
		[Column(Storage="_spenttime", DbType="Int")]
		public System.Nullable<int> spenttime
		{
			get
			{
				return this._spenttime;
			}
			set
			{
				if ((this._spenttime != value))
				{
					this.OnspenttimeChanging(value);
					this.SendPropertyChanging();
					this._spenttime = value;
					this.SendPropertyChanged("spenttime");
					this.OnspenttimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
